name: Issue Commenter

on:
  workflow_dispatch:
    inputs:
      project_id:
        description: 'GitHub Project ID'
        required: true
        default: 'your_project_id_here'
      repo_owner:
        description: 'Repository Owner'
        required: true
        default: 'your_repo_owner'
      repo_name:
        description: 'Repository Name'
        required: true
        default: 'your_repo_name'

jobs:
  comment_on_issues:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          pip install requests

      - name: Fetch Issues and Post Comments
        run: |
          echo "import os" > comment_on_issues.py
          echo "import requests" >> comment_on_issues.py
          echo "from datetime import datetime" >> comment_on_issues.py
          echo "" >> comment_on_issues.py
          echo "token = os.getenv('GITHUB_TOKEN')" >> comment_on_issues.py
          echo "headers = {'Authorization': f'token {token}'}" >> comment_on_issues.py
          echo "project_id = '${{ github.event.inputs.project_id }}'" >> comment_on_issues.py
          echo "repo_owner = '${{ github.event.inputs.repo_owner }}'" >> comment_on_issues.py
          echo "repo_name = '${{ github.event.inputs.repo_name }}'" >> comment_on_issues.py
          echo "" >> comment_on_issues.py
          echo "query = '''" >> comment_on_issues.py
          echo "{repository(owner: repo_owner, name: repo_name) {projectV2(id: project_id) {items(first: 100) {nodes {id content {...}}}}}}" >> comment_on_issues.py
          echo "''' " >> comment_on_issues.py
          echo "url = 'https://api.github.com/graphql'" >> comment_on_issues.py
          echo "response = requests.post(url, json={'query': query}, headers=headers)" >> comment_on_issues.py
          echo "issues = response.json()['data']['repository']['projectV2']['items']['nodes']" >> comment_on_issues.py
          echo "" >> comment_on_issues.py
          echo "for issue_node in issues:" >> comment_on_issues.py
          echo "  issue = issue_node['content']" >> comment_on_issues.py
          echo "  issue_number = issue['number']" >> comment_on_issues.py
          echo "  start_date = None" >> comment_on_issues.py
          echo "  end_date = None" >> comment_on_issues.py
          echo "" >> comment_on_issues.py
          echo "  for field_value in issue['projectItems'][0]['fieldValues']['nodes']:" >> comment_on_issues.py
          echo "    if field_value['field']['name'] == '開始日':" >> comment_on_issues.py
          echo "      start_date = field_value['value']" >> comment_on_issues.py
          echo "    elif field_value['field']['name'] == '終了日':" >> comment_on_issues.py
          echo "      end_date = field_value['value']" >> comment_on_issues.py
          echo "" >> comment_on_issues.py
          echo "  today = datetime.now().date()" >> comment_on_issues.py
          echo "" >> comment_on_issues.py
          echo "  if start_date and datetime.strptime(start_date, '%Y-%m-%d').date() == today:" >> comment_on_issues.py
          echo "    comment = '作業が開始されました。Issueの状態を「作業中」に変更してください。'" >> comment_on_issues.py
          echo "    requests.post(f'https://api.github.com/repos/{repo_owner}/{repo_name}/issues/{issue_number}/comments', headers=headers, json={'body': comment})" >> comment_on_issues.py
          echo "" >> comment_on_issues.py
          echo "  if end_date and datetime.strptime(end_date, '%Y-%m-%d').date() == today:" >> comment_on_issues.py
          echo "    comment = '作業が終了しましたか？完了報告をしてください。'" >> comment_on_issues.py
          echo "    requests.post(f'https://api.github.com/repos/{repo_owner}/{repo_name}/issues/{issue_number}/comments', headers=headers, json={'body': comment})" >> comment_on_issues.py
          echo "" >> comment_on_issues.py
          echo "  if start_date and end_date and datetime.strptime(start_date, '%Y-%m-%d').date() < today < datetime.strptime(end_date, '%Y-%m-%d').date():" >> comment_on_issues.py
          echo "    comment = '進捗状況を確認してください。作業は順調ですか？'" >> comment_on_issues.py
          echo "    requests.post(f'https://api.github.com/repos/{repo_owner}/{repo_name}/issues/{issue_number}/comments', headers=headers, json={'body': comment})" >> comment_on_issues.py
          python3 comment_on_issues.py
